// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gamemsg.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ChatMessage;
@class Login;
@class RoomData;
@class UserChatAction;
@class UserInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GamemsgRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface GamemsgRoot : GPBRootObject
@end

#pragma mark - UserInfo

typedef GPB_ENUM(UserInfo_FieldNumber) {
  UserInfo_FieldNumber_Id_p = 1,
  UserInfo_FieldNumber_NickName = 2,
  UserInfo_FieldNumber_Headimgurl = 3,
  UserInfo_FieldNumber_Sex = 4,
  UserInfo_FieldNumber_TeamId = 5,
  UserInfo_FieldNumber_Level = 6,
  UserInfo_FieldNumber_LevelIcon = 7,
  UserInfo_FieldNumber_AnchorId = 8,
  UserInfo_FieldNumber_LoginType = 9,
};

@interface UserInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *headimgurl;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sex;

@property(nonatomic, readwrite, copy, null_resettable) NSString *teamId;

///用户等级
@property(nonatomic, readwrite, copy, null_resettable) NSString *level;

@property(nonatomic, readwrite, copy, null_resettable) NSString *levelIcon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *anchorId;

///用户登录类型，对应 Login 中的登录类型
@property(nonatomic, readwrite) int32_t loginType;

@end

#pragma mark - Login

typedef GPB_ENUM(Login_FieldNumber) {
  Login_FieldNumber_Token = 1,
  Login_FieldNumber_LoginType = 2,
  Login_FieldNumber_RoomId = 3,
};

@interface Login : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

///用户登录类型：   1：普通用户   2：房间主播
@property(nonatomic, readwrite) int32_t loginType;

///房间 id
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@end

#pragma mark - ChatMessage

typedef GPB_ENUM(ChatMessage_FieldNumber) {
  ChatMessage_FieldNumber_RoomId = 1,
  ChatMessage_FieldNumber_UserId = 2,
  ChatMessage_FieldNumber_NickName = 3,
  ChatMessage_FieldNumber_MsgBody = 4,
  ChatMessage_FieldNumber_MsgType = 5,
  ChatMessage_FieldNumber_Level = 6,
};

@interface ChatMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msgBody;

@property(nonatomic, readwrite) int32_t msgType;

///用户等级
@property(nonatomic, readwrite, copy, null_resettable) NSString *level;

@end

#pragma mark - UserChatAction

typedef GPB_ENUM(UserChatAction_FieldNumber) {
  UserChatAction_FieldNumber_RoomId = 1,
  UserChatAction_FieldNumber_Game = 2,
  UserChatAction_FieldNumber_UserId = 3,
  UserChatAction_FieldNumber_NickName = 4,
  UserChatAction_FieldNumber_Action = 5,
};

@interface UserChatAction : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *game;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickName;

///0,进入聊天房间，1，离开聊天房间   2，用户被禁言  3，用户接除禁言
@property(nonatomic, readwrite) int32_t action;

@end

#pragma mark - RoomData

typedef GPB_ENUM(RoomData_FieldNumber) {
  RoomData_FieldNumber_RoomId = 1,
  RoomData_FieldNumber_RoomName = 2,
  RoomData_FieldNumber_OnlineUserNum = 3,
};

///房间实时数据
@interface RoomData : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

///房间名
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomName;

///在线用户数
@property(nonatomic, readwrite, copy, null_resettable) NSString *onlineUserNum;

@end

#pragma mark - MsgCommon

typedef GPB_ENUM(MsgCommon_FieldNumber) {
  MsgCommon_FieldNumber_Code = 1,
  MsgCommon_FieldNumber_Msg = 2,
  MsgCommon_FieldNumber_Other = 3,
  MsgCommon_FieldNumber_UserInfo = 200,
  MsgCommon_FieldNumber_Login = 201,
  MsgCommon_FieldNumber_ChatMessage = 202,
  MsgCommon_FieldNumber_UserChatAction = 203,
  MsgCommon_FieldNumber_RoomData = 204,
};

@interface MsgCommon : GPBMessage

///数据返回码
@property(nonatomic, readwrite) int32_t code;

/// 返回消息
@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

///其它预留信息
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *other;
/// The number of items in @c other without causing the array to be created.
@property(nonatomic, readonly) NSUInteger other_Count;

@property(nonatomic, readwrite, strong, null_resettable) UserInfo *userInfo;
/// Test to see if @c userInfo has been set.
@property(nonatomic, readwrite) BOOL hasUserInfo;

@property(nonatomic, readwrite, strong, null_resettable) Login *login;
/// Test to see if @c login has been set.
@property(nonatomic, readwrite) BOOL hasLogin;

@property(nonatomic, readwrite, strong, null_resettable) ChatMessage *chatMessage;
/// Test to see if @c chatMessage has been set.
@property(nonatomic, readwrite) BOOL hasChatMessage;

@property(nonatomic, readwrite, strong, null_resettable) UserChatAction *userChatAction;
/// Test to see if @c userChatAction has been set.
@property(nonatomic, readwrite) BOOL hasUserChatAction;

@property(nonatomic, readwrite, strong, null_resettable) RoomData *roomData;
/// Test to see if @c roomData has been set.
@property(nonatomic, readwrite) BOOL hasRoomData;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
